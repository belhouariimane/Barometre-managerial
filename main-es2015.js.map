{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/alert/alert.component.html","./src/app/app.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/myaccount/myaccount.component.html","./src/app/question/question-edit/question-edit.component.html","./src/app/question/question-show/question-show.component.html","./src/app/questionnaire/questionnaire-answer/questionnaire-answer.component.html","./src/app/questionnaire/questionnaire-edit/questionnaire-edit.component.html","./src/app/questionnaire/questionnaire-show/questionnaire-show.component.html","./src/app/register/register.component.html","./src/app/resultat/bar-chart/bar-chart.component.html","./src/app/resultat/doughnut-chart/doughnut-chart.component.html","./src/app/resultat/pie-chart/pie-chart.component.html","./src/app/resultat/resultat.component.html","./node_modules/tslib/tslib.es6.js","./src/app/alert/alert.component.scss","./src/app/alert/alert.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/error.interceptor.ts","./src/app/helpers/fake-backend.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/models/proposition.ts","./src/app/models/questionnaire.ts","./src/app/models/user.ts","./src/app/myaccount/myaccount.component.scss","./src/app/myaccount/myaccount.component.ts","./src/app/question/question-edit/question-edit.component.scss","./src/app/question/question-edit/question-edit.component.ts","./src/app/question/question-show/question-show.component.scss","./src/app/question/question-show/question-show.component.ts","./src/app/questionnaire/questionnaire-answer/questionnaire-answer.component.scss","./src/app/questionnaire/questionnaire-answer/questionnaire-answer.component.ts","./src/app/questionnaire/questionnaire-edit/questionnaire-edit.component.scss","./src/app/questionnaire/questionnaire-edit/questionnaire-edit.component.ts","./src/app/questionnaire/questionnaire-show/questionnaire-show.component.scss","./src/app/questionnaire/questionnaire-show/questionnaire-show.component.ts","./src/app/register/register.component.scss","./src/app/register/register.component.ts","./src/app/resultat/bar-chart/bar-chart.component.scss","./src/app/resultat/bar-chart/bar-chart.component.ts","./src/app/resultat/doughnut-chart/doughnut-chart.component.scss","./src/app/resultat/doughnut-chart/doughnut-chart.component.ts","./src/app/resultat/pie-chart/pie-chart.component.scss","./src/app/resultat/pie-chart/pie-chart.component.ts","./src/app/resultat/resultat.component.scss","./src/app/resultat/resultat.component.ts","./src/app/services/alert.service.ts","./src/app/services/auth.service.ts","./src/app/services/question.service.ts","./src/app/services/questionnaire.service.ts","./src/app/services/reponse.service.ts","./src/app/services/resultat.service.ts","./src/app/services/theme.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"message.cssClass\\\">{{message.text}}</div>\\n\"","export default \"\\n<!-- Nav -->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\">\\n    <div class=\\\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\\\">\\n        <a class=\\\"navbar-brand nav-item nav-link \\\"  routerLink='#'>Baromètre Managérial</a>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser\\\">\\n                <a class=\\\"nav-link \\\" (click)=\\\"myAccount()\\\">Mon compte</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser\\\">\\n                <a class=\\\"nav-link \\\" (click)=\\\"logout()\\\">Se déconnecter</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!currentUser\\\">\\n                <a class=\\\"nav-link \\\" routerLink=\\\"/login\\\">Connexion</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!currentUser\\\">\\n                <a class=\\\"nav-link \\\" routerLink=\\\"/register\\\">Inscription</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\\n<!-- Application principale -->\\n<div class=\\\"jumbotron min-vh-100\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-10 offset-sm-1 \\\">\\n                <app-alert></app-alert>\\n                <router-outlet></router-outlet>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","export default \"<h3>Bonjour {{currentUser.prenom}} !</h3>\\n<!--<h3>Liste des utilisateurs inscrits :</h3>-->\\n<!--<ul class=\\\"list-group\\\">-->\\n<!--    <li *ngFor=\\\"let user of users\\\" class=\\\"list-group-item m-3 rounded border border-primary\\\">-->\\n<!--        {{user.email}} ({{user.prenom}} {{user.nom}})-->\\n<!--        <button class=\\\"btn btn-danger float-right \\\" (click)=\\\"deleteUser(user.id)\\\" >Supprimer</button>-->\\n<!--    </li>-->\\n<!--</ul>-->\\n<h4>Liste des questionnaires</h4>\\n<ul class=\\\"list-group\\\">\\n    <div *ngFor=\\\"let questionnaire of questionnaires\\\" class=\\\"list-group-item m-3 rounded border border-info\\\">\\n        <div class=\\\"zero-border\\\" [routerLink]=\\\"['/edit-questionnaire', questionnaire.id]\\\">\\n        <h4>{{questionnaire.titre}}</h4>\\n        <h5>{{questionnaire.description}} </h5>\\n            <div>Lien : <a [routerLink]=\\\"['/answer', questionnaire.id]\\\">{{apiUrl}}/answer/{{questionnaire.id}}</a></div>\\n        <div>Anonyme : {{ questionnaire.anonymous ? \\\"oui\\\" : \\\"non\\\" }} </div>\\n        <div>Nombre de questions : {{questionnaire.nbQuestions}}</div>\\n        <div>Nombre de participations : 32</div>\\n        </div>\\n        <button class=\\\"float-right mx-2\\\" mat-button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteQuestionnaire(questionnaire.id)\\\"><mat-icon>delete</mat-icon> </button>\\n        <button class=\\\"float-right mx-2\\\" mat-button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/edit-questionnaire', questionnaire.id]\\\"><mat-icon>update</mat-icon> </button>\\n        <button class=\\\"float-right mx-2\\\" mat-button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/show-questionnaire', questionnaire.id]\\\"><mat-icon>slideshow</mat-icon> </button>\\n        <button class=\\\"float-right mx-2\\\" mat-button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/statistiques', questionnaire.id]\\\"><mat-icon>equalizer</mat-icon> </button>\\n    </div>\\n</ul>\\n<div class=\\\"text-center mt-3\\\">\\n    <button class=\\\"btn btn-primary mx-3\\\" routerLink=\\\"/edit-questionnaire\\\">\\n        Nouveau questionnaire\\n    </button>\\n</div>\\n\"","export default \"<h2 class=\\\"text-center\\\">Connexion</h2>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Nom d'utilisateur</label>\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.email.errors.required\\\">Veuillez renseigner le nom d'utilisateur</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Mot de passe</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Veuillez renseigner le mot de passe</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n            Se connecter\\n        </button>\\n        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">S'inscrire</a>\\n    </div>\\n</form>\\n\"","export default \"<div class=\\\"container border rounded border-info mb-4 p-3\\\">\\n    <h3>Informations personnelles</h3>\\n    <p>Vous pouvez modifier vos informations personnelles ci-dessous.</p>\\n    <form [formGroup]=\\\"updateUserForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Prénom</label>\\n            <input type=\\\"text\\\" formControlName=\\\"prenom\\\" class=\\\"form-control\\\" placeholder=\\\"{{currentUser.prenom}}\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Nom</label>\\n            <input type=\\\"text\\\" formControlName=\\\"nom\\\" class=\\\"form-control\\\" placeholder=\\\"{{currentUser.nom}}\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Nom d'utilisateur</label>\\n            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"{{currentUser.email}}\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Mot de passe</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && (f.password.errors || updateUserForm.errors?.notSame)}\\\" />\\n            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.password.errors.minlength\\\">Le mot de passe doit contenir au moins 6 caractères</div>\\n            </div>\\n            <div *ngIf=\\\"submitted && updateUserForm.errors?.notSame\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"updateUserForm.errors?.notSame\\\">Les mots de passe ne sont pas identiques</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Confirmation du mot de passe</label>\\n            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && (f.confirmPassword.errors || updateUserForm.errors?.notSame)}\\\" />\\n            <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.confirmPassword.errors.minlength\\\">Le mot de passe doit contenir au moins 6 caractères</div>\\n            </div>\\n            <div *ngIf=\\\"submitted && updateUserForm.errors?.notSame\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"updateUserForm.errors?.notSame\\\">Les mots de passe ne sont pas identiques</div>\\n            </div>\\n        </div>\\n        <br/>\\n        <div class=\\\"form-group text-center\\\">\\n            <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                Valider les modifications\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n<div class=\\\"container border rounded border-info mb-4 p-3\\\">\\n    <h3>Statistiques</h3>\\n    <p>Vous pouvez consulter ici vos statisques depuis la création de votre compte (18/06/20)</p>\\n    <p>Nombre de questionnaires créés : {{nbQuestionnairesCrees}}</p>\\n    <p>Nombre de questions créées : {{nbQuestionsCreees}}</p>\\n    <p>Nombre de réponses aux questionnaires : 824</p>\\n    <br/>\\n    <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-danger mx-3\\\" (click)=\\\"logout()\\\">Déconnexion</button>\\n        <button class=\\\"btn btn-dark mx-3\\\" (click)=\\\"deleteAccount()\\\">Suppression définitive du compte</button>\\n    </div>\\n</div>\\n<button class=\\\"btn btn-secondary float-right mx-3\\\" routerLink=\\\"'/'\\\">Retour à l'accueil</button>\\n\"","export default \"<div class=\\\"container border rounded border-info mb-4 p-3\\\">\\n    <h3>Informations de la question</h3>\\n    <form class=\\\"m-3\\\" [formGroup]=\\\"questionForm\\\" >\\n        <div class=\\\"form-group \\\">\\n            <label>Question</label>\\n            <input type=\\\"text\\\" formControlName=\\\"valeur\\\" class=\\\"form-control\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.valeur.errors } \\\" placeholder=\\\"{{question?.valeur}}\\\"/>\\n            <div *ngIf=\\\"submitted && f.valeur.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.valeur.errors.required\\\">Veuillez renseigner la question</div>\\n            </div>\\n        </div>\\n<!--        <div class=\\\"form-group\\\">-->\\n<!--            <label>Thème</label>-->\\n<!--            <select formControlName=\\\"idTheme\\\" class=\\\"form-control browser-default custom-select\\\"-->\\n<!--                [ngClass]=\\\" { 'is-invalid': submitted && f.idTheme.errors }\\\">-->\\n<!--                <option [ngValue]=\\\"null\\\" disabled>Choisissez le thème associé à cette question</option>-->\\n<!--                <option *ngFor=\\\"let theme of themes; let i = index\\\" [ngValue]=i+1>-->\\n<!--                    {{ theme }}-->\\n<!--                </option>-->\\n<!--            </select>-->\\n<!--            <div *ngIf=\\\"submitted && f.idTheme.errors\\\" class=\\\"invalid-feedback\\\">-->\\n<!--                <div *ngIf=\\\"f.idTheme.errors.required\\\">Veuillez sélectionner un thème</div>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n        <div class=\\\"form-group\\\">\\n            <mat-slide-toggle\\n                    class=\\\"example-margin\\\"\\n                    formControlName=\\\"isRequired\\\"\\n                    checked=\\\"{{question?.isRequired}}\\\">\\n                Cette question est-elle obligatoire ?\\n            </mat-slide-toggle>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <mat-slide-toggle\\n                    class=\\\"example-margin\\\"\\n                    formControlName=\\\"isFilter\\\"\\n                    checked=\\\"{{question?.isFilter}}\\\">\\n                Cette question doit-elle être utilisée comme filtre dans la synthèse ?\\n            </mat-slide-toggle>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <mat-slide-toggle\\n                    class=\\\"example-margin\\\"\\n                    formControlName=\\\"hasGraph\\\"\\n                    checked=\\\"{{question?.hasGraph}}\\\">\\n                Cette question doit-elle être représentée par un graphe dans la synthèse ?\\n            </mat-slide-toggle>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'is-invalid': submitted && typeQuestion===undefined }\\\">\\n            <label>Type</label><br/>\\n            <button class=\\\"mx-3\\\" [ngClass]=\\\"(typeQuestion==='CHECKBOX')?'button-custom' : ''\\\" mat-raised-button  mat-mini-fab color=\\\"accent\\\" (click)=\\\"addCheckBox()\\\">\\n                <mat-icon>check_box</mat-icon>\\n            </button>\\n            <button class=\\\"mx-3\\\" [ngClass]=\\\"(typeQuestion==='RADIO')?'button-custom' : ''\\\" mat-raised-button  mat-mini-fab color=\\\"accent\\\" (click)=\\\"addRadioBtn()\\\">\\n                <mat-icon>radio_button_checked</mat-icon>\\n            </button>\\n            <button class=\\\"mx-3\\\" [ngClass]=\\\"(typeQuestion==='COMBOBOX')?'button-custom' : ''\\\" mat-raised-button  mat-mini-fab color=\\\"accent\\\" (click)=\\\"addSelect()\\\">\\n                <mat-icon>list</mat-icon>\\n            </button>\\n            <button class=\\\"mx-3\\\" [ngClass]=\\\"(typeQuestion==='OUVERT')?'button-custom' : ''\\\" mat-raised-button  mat-mini-fab color=\\\"accent\\\" (click)=\\\"addInput()\\\">\\n                <mat-icon>notes</mat-icon>\\n            </button>\\n            <button  class=\\\"mx-3\\\" [ngClass]=\\\"(typeQuestion==='DATE')?'button-custom' : ''\\\" mat-raised-button  mat-mini-fab color=\\\"accent\\\" (click)=\\\"addDatePicker()\\\">\\n                <mat-icon>date_range</mat-icon>\\n            </button>\\n        </div>\\n        <div *ngIf=\\\"submitted && typeQuestion===undefined\\\" class=\\\"invalid-feedback float-right\\\">\\n            <div *ngIf=\\\"typeQuestion===undefined\\\">Veuillez sélectionner un typeQuestion</div><br/>\\n        </div>\\n        <div *ngIf=\\\"typeQuestion==='CHECKBOX' || typeQuestion==='RADIO' || typeQuestion==='COMBOBOX'\\\">\\n            <div formArrayName=\\\"propositions\\\">\\n                <div *ngFor=\\\"let proposition of propositions.controls; let i = index;\\\">\\n                    <div class=\\\"container border rounded border-info mb-2 pt-2 px-4\\\" [formGroupName]=\\\"i\\\">\\n                        <label>Proposition {{i+1}} : </label>\\n                        <div class=\\\"input-group\\\">\\n                            <input type=\\\"text\\\" class='form-control mx-2 ' formControlName=\\\"valeur\\\" placeholder=\\\"{{proposition?.value.valeur}}\\\" />\\n                            <div class=\\\"input-group-prepend\\\">\\n                            <button class=\\\"float-right\\\" (click)=\\\"removeProposition(i)\\\" mat-raised-button  mat-mini-fab color=\\\"warn\\\">\\n                                <mat-icon>remove_circle</mat-icon>\\n                            </button>\\n                            </div>\\n                        </div>\\n                            <br/>\\n                    </div>\\n                </div>\\n            </div>\\n            <button class=\\\"float-right\\\" (click)=\\\"addPropositions('')\\\" mat-raised-button  mat-mini-fab color=\\\"primary\\\">\\n                <mat-icon>add_circle</mat-icon>\\n            </button>\\n        </div>\\n\\n        <div *ngIf=\\\"typeQuestion==='OUVERT'\\\">\\n            <div class=\\\"container border rounded border-info mb-4 pb-4 pt-2 px-4\\\">\\n                <mat-form-field class=\\\"w-100\\\" >\\n                    <mat-label>Veuillez saisir votre réponse</mat-label>\\n                    <textarea matInput></textarea>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"typeQuestion==='DATE'\\\">\\n            <div class=\\\"container border rounded border-info mb-4 pb-4 pt-2 px-4\\\">\\n                <mat-form-field>\\n                    <mat-label>Choisissez une date</mat-label>\\n                    <input matInput [matDatepicker]=\\\"picker\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <br/>\\n        <div class=\\\"form-group text-center\\\">\\n            <button type=button (click)=\\\"onNewQuestion()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                Valider les informations\\n            </button>\\n        </div>\\n    </form>\\n    <br/>\\n</div>\\n<button class=\\\"btn btn-secondary float-right\\\" (click)=\\\"backClicked()\\\">Retour au questionnaire</button>\\n\"","export default \"<ng-container [ngSwitch]=\\\"question?.typeQuestion\\\" >\\n    <h3>{{question?.valeur}}</h3><br/>\\n    <div *ngSwitchCase=\\\"'CHECKBOX'\\\" class=\\\"container border rounded border-info px-4 py-2\\\">\\n        <div *ngFor=\\\"let proposition of propositions\\\">\\n            <br/>\\n            <mat-checkbox>{{proposition.valeur}}</mat-checkbox>\\n        </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'RADIO'\\\" class=\\\"container border rounded border-info px-4 py-2\\\">\\n        <mat-radio-group\\n                aria-labelledby=\\\"example-radio-group-label\\\"\\n                class=\\\"example-radio-group\\\"\\n                [(ngModel)]=\\\"chosenResponse\\\">\\n            <div *ngFor=\\\"let proposition of propositions\\\">\\n                <mat-radio-button class=\\\"example-radio-button\\\">{{proposition.valeur}}</mat-radio-button><br/>\\n            </div>\\n            <br/>\\n        </mat-radio-group>\\n    </div>\\n    <div *ngSwitchCase=\\\"'COMBOBOX'\\\" class=\\\"container border rounded border-info px-4 py-2\\\">\\n        <mat-form-field class=\\\"w-50\\\">\\n            <mat-label>Choisissez une valeur</mat-label>\\n            <mat-select class=\\\"text-center\\\" matNativeControl required>\\n                <div *ngFor=\\\"let proposition of propositions\\\">\\n                    <mat-option value=\\\"{{proposition.valeur}}\\\">{{proposition.valeur}}</mat-option>\\n                </div>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n    <div *ngSwitchCase=\\\"'DATE'\\\" class=\\\"container border rounded border-info px-4 py-2\\\">\\n        <mat-form-field>\\n            <mat-label>Choisissez une date</mat-label>\\n            <input matInput [matDatepicker]=\\\"picker\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n    </div>\\n    <div *ngSwitchCase=\\\"'OUVERT'\\\" class=\\\"container border rounded border-info px-4 py-2\\\">\\n        <mat-form-field class=\\\"w-100\\\" >\\n            <mat-label>Veuillez saisir votre réponse</mat-label>\\n            <textarea matInput></textarea>\\n        </mat-form-field>\\n    </div>\\n\\n</ng-container>\\n<br/>\\n<button [hidden]=\\\"!apercuQuestion\\\" class=\\\"btn btn-secondary float-right\\\" [routerLink]=\\\"['/edit-questionnaire', idQuestionnaire]\\\">Retour au questionnaire</button>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h1 class=\\\"card-header text-center\\\">{{questionnaire?.titre}}</h1>\\n    <div *ngIf=\\\"!done\\\" class=\\\"card-body\\\">\\n        <p>Bonjour, merci de prendre quelques minutes afin de répondre à ce questionnaire.</p>\\n        <form [formGroup]=\\\"answerForm\\\" (ngSubmit)=\\\"onSubmit(answerForm)\\\">\\n            <div class=\\\"form\\\">\\n                <div *ngIf=\\\"questionnaire?.anonymous\\\">Ce questionnaire est anonyme.</div>\\n                <div *ngIf=\\\"!questionnaire?.anonymous\\\">Veuillez saisir votre nom et prénom, répondre aux questions\\n                ci-dessous puis valider votre participation en cliquant sur le bouton en bas de page.</div><br/>\\n                <div class=\\\"input-group\\\">\\n                <div class=\\\"form-group px-2 w-50\\\">\\n                    <label>Prénom</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control mx-2\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.firstName.errors.required\\\">Veuillez renseigner votre prénom</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group px-2 w-50 float-right\\\">\\n                    <label>Nom</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control input-group-prepend mx-2\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.lastName.errors.required\\\">Veuillez renseigner votre nom</div>\\n                    </div>\\n                </div>\\n                </div>\\n                <div formArrayName=\\\"questions\\\">\\n                    <div class=\\\"form-group\\\" [formGroupName]=\\\"i\\\" *ngFor=\\\"let question of getQuestions(answerForm); let i = index\\\">\\n                        <div class=\\\"w-100\\\">\\n                            <h5>{{question.value.valeurQuestion}}</h5>\\n                            <ng-container [ngSwitch]=\\\"question?.value.typeQuestion\\\" >\\n                                <div *ngSwitchCase=\\\"'CHECKBOX'\\\" class=\\\"container border rounded border-info p-4\\\">\\n                                    <div formArrayName=\\\"propositions\\\">\\n                                        <div [formGroupName]=\\\"j\\\" *ngFor=\\\"let proposition of getPropositions(question); let j = index\\\">\\n                                            <mat-checkbox>{{proposition?.value.valeurProp}}</mat-checkbox>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'RADIO'\\\" class=\\\"container border rounded border-info p-4\\\">\\n                                    <mat-radio-group\\n                                            aria-labelledby=\\\"example-radio-group-label\\\"\\n                                            class=\\\"example-radio-group\\\">\\n                                        <div formArrayName=\\\"propositions\\\">\\n                                            <div [formGroupName]=\\\"j\\\" *ngFor=\\\"let proposition of getPropositions(question); let j = index\\\">\\n                                                <mat-radio-button class=\\\"example-radio-button\\\">{{proposition?.value.valeurProp}}</mat-radio-button><br/>\\n                                            </div>\\n                                        </div>\\n                                        <br/>\\n                                    </mat-radio-group>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'COMBOBOX'\\\" class=\\\"container border rounded border-info p-4\\\">\\n                                    <mat-form-field class=\\\"w-50\\\">\\n                                        <mat-label>Choisissez une valeur</mat-label>\\n                                        <mat-select class=\\\"text-center\\\" matNativeControl required>\\n                                            <div formArrayName=\\\"propositions\\\">\\n                                                <div [formGroupName]=\\\"j\\\" *ngFor=\\\"let proposition of getPropositions(question); let j = index\\\">\\n                                                    <mat-option value=\\\"{{proposition?.value.idProp}}\\\">{{proposition?.value.valeurProp}}</mat-option>\\n                                                </div>\\n                                            </div>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'DATE'\\\" class=\\\"container border rounded border-info p-4\\\">\\n                                    <mat-form-field>\\n                                        <mat-label>Choisissez une date</mat-label>\\n                                        <input matInput [matDatepicker]=\\\"picker\\\">\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker></mat-datepicker>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'OUVERT'\\\" class=\\\"container border rounded border-info p-4\\\">\\n                                    <mat-form-field class=\\\"w-100\\\" >\\n                                        <mat-label>Veuillez saisir votre réponse</mat-label>\\n                                        <textarea required=\\\"{{question?.value.isRequired}}\\\" matInput></textarea>\\n                                    </mat-form-field>\\n                                </div>\\n                            </ng-container>\\n                        </div>\\n                    </div>\\n                </div>\\n            <div class=\\\"form-group text-center\\\">\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-success \\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    Valider\\n                </button>\\n            </div>\\n            </div>\\n        </form >\\n            {{this.answerForm.value | json}}\\n    </div>\\n    <div *ngIf=\\\"done\\\" class=\\\"card-body\\\">\\n        <p>{{questionnaire.merci}}</p>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container border rounded border-info mb-4 p-3\\\">\\n    <h3>Informations du questionnaire</h3>\\n    <form class=\\\"m-3\\\" [formGroup]=\\\"questionnaireForm\\\" >\\n        <div class=\\\"form-group \\\">\\n            <label>Titre</label>\\n            <input type=\\\"text\\\" formControlName=\\\"titre\\\" class=\\\"form-control\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.titre.errors } \\\" placeholder=\\\"{{questionnaire?.titre}}\\\"/>\\n            <div *ngIf=\\\"submitted && f.titre.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.titre.errors.required\\\">Veuillez renseigner un titre</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n            <label>Description</label>\\n            <input type=\\\"text\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors } \\\" placeholder=\\\"{{questionnaire?.description}}\\\"/>\\n            <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.description.errors.required\\\">Veuillez renseigner une description</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n            <label>Message de remerciement</label>\\n            <input type=\\\"text\\\" formControlName=\\\"merci\\\" class=\\\"form-control\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.merci.errors } \\\" placeholder=\\\"{{questionnaire?.merci}}\\\"/>\\n            <div *ngIf=\\\"submitted && f.merci.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.merci.errors.required\\\">Veuillez renseigner un message de remerciement</div>\\n            </div>\\n        </div>\\n<!--        <div formArrayName=\\\"themes\\\">-->\\n<!--            <label>Thèmes</label>-->\\n<!--            <br/>-->\\n<!--            <div *ngFor=\\\"let theme of themes.controls; let i = index;\\\" [formGroupName]=\\\"i\\\">-->\\n<!--                <div class=\\\"input-group\\\">-->\\n<!--                    <label>Thème {{i+1}} : </label>-->\\n<!--                    <input type=\\\"text\\\" class='form-control mx-2' formControlName=\\\"theme\\\" placeholder=\\\"{{theme?.value.theme}}\\\" />-->\\n<!--                    <button class=\\\"float-right\\\" (click)=\\\"removeTheme(i)\\\" mat-raised-button  mat-mini-fab color=\\\"warn\\\">-->\\n<!--                        <mat-icon>remove_circle</mat-icon>-->\\n<!--                    </button>-->\\n<!--                </div>-->\\n<!--                <br/>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--        {{this.questionnaireForm.value | json}}-->\\n\\n<!--        <button class=\\\"float-right\\\" (click)=\\\"addTheme('')\\\" mat-raised-button  mat-mini-fab color=\\\"primary\\\">-->\\n<!--            <mat-icon>add_circle</mat-icon>-->\\n<!--        </button>-->\\n        <br/>\\n        <br/>\\n        <div class=\\\"form-group\\\">\\n            <mat-slide-toggle\\n                    class=\\\"example-margin\\\"\\n                    formControlName=\\\"anonymous\\\"\\n                    checked=\\\"{{questionnaire?.anonymous}}\\\">\\n                Questionnaire anonyme\\n            </mat-slide-toggle>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n            <button (click)=\\\"onNewQuestionnaire()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                Valider les informations\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n<div class=\\\"container border rounded border-info mb-4 p-3\\\">\\n    <h3>Liste des questions</h3>\\n    <ul class=\\\"list-group\\\">\\n        <div *ngFor=\\\"let question of questions\\\" class=\\\"list-group-item m-3 rounded border\\\">\\n            <div class=\\\"zero-border\\\" [routerLink]=\\\"['/edit-question',idQuestionnaire, question.id]\\\">\\n                <div>Question n°{{question.id}} : {{question.valeur}}</div>\\n                <div>Type : {{question.typeQuestion}}</div>\\n                <div *ngIf=\\\"question.isFilter\\\">Filtre : {{question.isFilter}}</div>\\n                <div *ngIf=\\\"question.hasGraph\\\">Graphe : {{question.hasGraph}}</div>\\n                <div *ngIf=\\\"question.isRequired\\\">Obligatoire : {{question.isRequired}}</div>\\n            </div>\\n            <div class=\\\"float-right \\\">\\n                <button class=\\\"mx-2\\\" mat-button mat-raised-button color=\\\"primary\\\"  [routerLink]=\\\"['/show-question',idQuestionnaire, question.id]\\\"><mat-icon>slideshow</mat-icon> </button>\\n                <button class=\\\"mx-2\\\" mat-button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/edit-question',idQuestionnaire, question.id]\\\"><mat-icon>update</mat-icon> </button>\\n                <button class=\\\"mx-2\\\" mat-button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/edit-questionnaire', idQuestionnaire]\\\" (click)=\\\"deleteQuestion(question.id)\\\"><mat-icon>delete</mat-icon> </button>\\n            </div>\\n        </div>\\n    </ul>\\n    <div class=\\\"text-center mt-3\\\">\\n         <button class=\\\"btn btn-primary mx-3\\\" [routerLink]=\\\"['/edit-question', idQuestionnaire]\\\">\\n             Nouvelle question\\n         </button>\\n    </div>\\n</div>\\n<button class=\\\"btn btn-secondary float-right mx-3\\\" routerLink=\\\"'/'\\\">Retour à l'accueil</button>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h5 class=\\\"card-header\\\">{{questionnaire?.titre}}</h5>\\n        <div class=\\\"card-body\\\">\\n            <form>\\n                <div class=\\\"form\\\">\\n                    <div *ngFor=\\\"let question of questions\\\">\\n                        <div class=\\\"w-100\\\">\\n                                <app-question-show [idQuestion]=\\\"question.id\\\"></app-question-show>\\n                        </div>\\n                    </div>\\n                    <button class=\\\"btn btn-secondary float-right\\\" [routerLink]=\\\"['/']\\\">Retour à l'accueil</button>\\n                </div>\\n            </form >\\n        </div>\\n</div>\\n\"","export default \"<h2 class=\\\"text-center\\\">Inscription</h2>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Prénom</label>\\n        <input type=\\\"text\\\" formControlName=\\\"prenom\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.prenom.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.prenom.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.prenom.errors.required\\\">Veuillez renseigner votre prénom</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Nom</label>\\n        <input type=\\\"text\\\" formControlName=\\\"nom\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.nom.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.nom.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.nom.errors.required\\\">Veuillez renseigner votre nom</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Nom d'utilisateur</label>\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.email.errors.required\\\">Veuillez renseigner votre nom d'utilisateur</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Mot de passe</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && (f.password.errors || registerForm.errors?.notSame)}\\\" />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Veuillez renseigner votre mot de passe</div>\\n            <div *ngIf=\\\"f.password.errors.minlength\\\">Le mot de passe doit contenir au moins 6 caractères</div>\\n        </div>\\n        <div *ngIf=\\\"submitted && registerForm.errors?.notSame\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"registerForm.errors?.notSame\\\">Les mots de passe ne sont pas identiques</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Confirmation du mot de passe</label>\\n        <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && (f.confirmPassword.errors || registerForm.errors?.notSame)}\\\" />\\n        <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Veuillez confirmer votre nouveau mot de passe</div>\\n            <div *ngIf=\\\"f.confirmPassword.errors.minlength\\\">Le mot de passe doit contenir au moins 6 caractères</div>\\n        </div>\\n        <div *ngIf=\\\"submitted && registerForm.errors?.notSame\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"registerForm.errors?.notSame\\\">Les mots de passe ne sont pas identiques</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n            S'inscrire\\n        </button>\\n        <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Annuler</a>\\n    </div>\\n</form>\\n\"","export default \"<div>\\n    <div style=\\\"display: block\\\">\\n        <canvas baseChart\\n                [datasets]=\\\"barChartData\\\"\\n                [labels]=\\\"barChartLabels\\\"\\n                [options]=\\\"barChartOptions\\\"\\n                [legend]=\\\"barChartLegend\\\"\\n                [chartType]=\\\"barChartType\\\">\\n        </canvas>\\n    </div>\\n</div>\\n\"","export default \"<div style=\\\"display: block\\\">\\n    <canvas baseChart\\n            [data]=\\\"doughnutChartData\\\"\\n            [labels]=\\\"doughnutChartLabels\\\"\\n            [chartType]=\\\"doughnutChartType\\\"></canvas>\\n</div>\\n\"","export default \"<div style=\\\"display: block\\\">\\n    <canvas baseChart\\n            [data]=\\\"pieChartData\\\"\\n            [labels]=\\\"pieChartLabels\\\"\\n            [chartType]=\\\"pieChartType\\\"></canvas>\\n</div>\\n\"","export default \"<app-pie-chart></app-pie-chart>\\n<app-doughnut-chart></app-doughnut-chart>\\n<app-bar-chart></app-bar-chart>\\n<button class=\\\"btn btn-secondary float-right\\\" >export</button>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsZXJ0L2FsZXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {AlertService} from '../services/alert.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\n\n/* Le composant d'alerte transmet les messages d'alerte au modèle chaque fois qu'un message\n * est reçu du service d'alerte. Pour ce faire, il s'abonne à la méthode getMessage() du service d'alerte,\n * qui renvoie un Observable.\n */\nexport class AlertComponent implements OnInit, OnDestroy {\n\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.subscription = this.alertService.getAlert()\n        .subscribe(message => {\n          switch (message && message.type) {\n            case 'success':\n              message.cssClass = 'alert alert-success';\n              break;\n            case 'error':\n              message.cssClass = 'alert alert-danger';\n              break;\n          }\n          this.message = message;\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {AuthGuard} from './helpers/auth.guard';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {MyaccountComponent} from './myaccount/myaccount.component';\nimport {QuestionnaireEditComponent} from './questionnaire/questionnaire-edit/questionnaire-edit.component';\nimport {QuestionnaireShowComponent} from './questionnaire/questionnaire-show/questionnaire-show.component';\nimport {QuestionEditComponent} from './question/question-edit/question-edit.component';\nimport {QuestionShowComponent} from './question/question-show/question-show.component';\nimport {QuestionnaireAnswerComponent} from './questionnaire/questionnaire-answer/questionnaire-answer.component';\nimport {ResultatComponent} from './resultat/resultat.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'myaccount', component: MyaccountComponent, canActivate: [AuthGuard] },\n  { path: 'edit-questionnaire/:id', component: QuestionnaireEditComponent, canActivate: [AuthGuard] },\n  { path: 'edit-questionnaire', component: QuestionnaireEditComponent, canActivate: [AuthGuard] },\n  { path: 'show-questionnaire/:id', component: QuestionnaireShowComponent, canActivate: [AuthGuard] },\n  { path: 'answer/:id', component: QuestionnaireAnswerComponent },\n  { path: 'edit-question/:idQuestionnaire/:idQuestion', component: QuestionEditComponent, canActivate: [AuthGuard] },\n  { path: 'edit-question/:idQuestionnaire', component: QuestionEditComponent, canActivate: [AuthGuard] },\n  { path: 'show-question/:idQuestionnaire/:idQuestion', component: QuestionShowComponent, canActivate: [AuthGuard] },\n  { path: 'statistiques/:id', component: ResultatComponent, canActivate: [AuthGuard] },\n\n\n  // sinon, redirige vers la page d'accueil\n  { path: '**', redirectTo: ''}\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport {User} from './models/user';\nimport {AuthService} from './services/auth.service';\nimport {Router} from '@angular/router';\nimport {UserService} from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n/* Le composant app est le composant racine de l'application, il définit la balise racine avec la propriété du selector de @Component\n * Il s'abonne à la variable currentUser observable dans le service d'authentification afin de pouvoir afficher / masquer de manière\n * réactive la barre de navigation principale lorsque l'utilisateur se connecte / déconnecte de l'application.\n *\n */\nexport class AppComponent {\n  currentUser: User;\n\n  constructor(\n      private router: Router,\n      private authService: AuthService,\n  ) {\n    this.authService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  myAccount() {\n    this.router.navigate(['/myaccount']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatButtonModule, MatCardModule,\n    MatCheckboxModule, MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule,\n    MatSelectModule, MatSnackBar, MatSnackBarModule, MatTableModule\n} from '@angular/material';\nimport {MatRadioModule} from '@angular/material/radio';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { QuestionnaireEditComponent } from './questionnaire/questionnaire-edit/questionnaire-edit.component';\nimport { QuestionnaireShowComponent } from './questionnaire/questionnaire-show/questionnaire-show.component';\nimport { AlertComponent } from './alert/alert.component';\nimport {AlertService} from './services/alert.service';\nimport {AuthService} from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {JwtInterceptor} from './helpers/jwt.interceptor';\nimport {ErrorInterceptor} from './helpers/error.interceptor';\nimport {fakeBackendProvider} from './helpers/fake-backend';\nimport { MyaccountComponent } from './myaccount/myaccount.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { ChartsModule } from 'ng2-charts';\nimport { BarChartComponent } from './resultat/bar-chart/bar-chart.component';\nimport { DoughnutChartComponent } from './resultat/doughnut-chart/doughnut-chart.component';\nimport { PieChartComponent } from './resultat/pie-chart/pie-chart.component';\nimport { ResultatComponent } from './resultat/resultat.component';\nimport { QuestionEditComponent } from './question/question-edit/question-edit.component';\nimport { QuestionShowComponent } from './question/question-show/question-show.component';\nimport { QuestionnaireAnswerComponent } from './questionnaire/questionnaire-answer/questionnaire-answer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionnaireEditComponent,\n    QuestionnaireShowComponent,\n    AlertComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    MyaccountComponent,\n    QuestionnaireShowComponent,\n    BarChartComponent,\n    DoughnutChartComponent,\n    PieChartComponent,\n    ResultatComponent,\n    QuestionEditComponent,\n    QuestionShowComponent,\n    QuestionnaireAnswerComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatButtonModule,\n        MatCardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        HttpClientModule,\n        MatRadioModule,\n        MatDialogModule,\n        MatTableModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        ChartsModule\n    ],\n  providers: [\n      { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n      { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n      // création de fausses données en attendant le back ...\n      fakeBackendProvider,\n      MatDatepickerModule\n  ],\n\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({ providedIn: 'root' })\n\n// La garde d'authentification est utilisée pour empêcher les utilisateurs non authentifiés\n// d'accéder aux pages réservées aux utilisateurs connectés.\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authService: AuthService\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authService.currentUserValue;\n        if (currentUser) {\n            // Autorisé donc retourne vrai\n            return true;\n        }\n\n        // Non connecté donc redirection vers la page de connexion avec l'url retourné\n        this.router.navigate(['/login'], {queryParams: { returnUrl: state.url}});\n        return false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\n/* L'intercepteur d'erreur intercepte les réponses http de l'API pour vérifier s'il y a eu des erreurs.\n * S'il y a une réponse 401 non autorisée, l'utilisateur est automatiquement déconnecté de l'application,\n * toutes les autres erreurs sont renvoyées au service appelant afin qu'une alerte puisse être affichée à l'utilisateur\n */\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // Déconnexion automatique si la réponse de l'API est 401\n                this.authService.logout();\n                location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {delay, dematerialize, materialize, mergeMap} from 'rxjs/operators';\nimport {register} from 'ts-node';\nimport {error} from 'util';\nimport {ok} from 'assert';\nimport {User} from '../models/user';\nimport {Question} from '../models/question';\nimport {environment} from '../../environments/environment';\n\nlet users = JSON.parse(localStorage.getItem('users')) || [];\nlet questionnaires = JSON.parse(localStorage.getItem('questionnaires')) || [];\nlet questions = JSON.parse(localStorage.getItem('questions')) || [];\nlet propositions = JSON.parse(localStorage.getItem('propositions')) || [];\nlet themes = JSON.parse(localStorage.getItem('themes')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize())\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            console.log(method + ' : ' + url);\n            switch (true) {\n                // // USERS\n                // case url.endsWith('/users/authenticate') && method === 'POST':\n                //     return authenticate();\n                // case url.endsWith('/users/register') && method === 'POST':\n                //     return registerUser();\n                // case url.match(/\\/users\\/update\\/\\d+$/) && method === 'POST':\n                //     return updateUser();\n                // case url.endsWith('/users') && method === 'GET':\n                //     return getUsers();\n                // case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                //     return deleteUser();\n                //\n                // // QUESTIONNAIRES\n                // case url.match(/\\/questionnaires\\/update\\/\\d+$/) && method === 'POST':\n                //     return updateQuestionnaire();\n                // case url.endsWith('/questionnaires/register') && method === 'POST':\n                //     return registerQuestionnaire();\n                // case url.match(/\\/questionnaires\\/all\\/\\d+$/) && method === 'GET':\n                //     return getQuestionnairesByIdUser();\n                // case url.match(/\\/questionnaires\\/\\d+$/) && method === 'GET':\n                //     return getQuestionnaireById();\n                // case url.match(/\\/questionnaires\\/\\d+$/) && method === 'DELETE':\n                //     return deleteQuestionnaire();\n                //\n                // // QUESTIONS\n                // case url.match(/\\/questions\\/update\\/\\d+$/) && method === 'POST':\n                //     return updateQuestion();\n                // case url.endsWith('/questions/create') && method === 'POST':\n                //     return createQuestion();\n                // case url.match(/\\/questions\\/all\\/\\d+$/) && method === 'GET':\n                //     return getQuestionsByIdQuestionnaire();\n                // case url.match(/\\/questions\\/read\\/\\d+$/) && method === 'GET':\n                //     return getQuestionById();\n                // case url.match(/\\/questions\\/\\d+$/) && method === 'DELETE':\n                //     return deleteQuestion();\n                //\n                // // PROPOSITIONS\n                // case url.endsWith('/propositions/') && method === 'POST':\n                //     return createProposition();\n                // case url.match(/\\/propositions\\/\\d+$/) && method === 'GET':\n                //     return getPropositions();\n                // case url.match(/\\/propositions\\/\\d+$/) && method === 'DELETE':\n                //     return deletePropositions();\n                //\n                // // THEMES\n                // case url.endsWith('/themes/') && method === 'POST':\n                //     return createTheme();\n                // case url.match(/\\/themes\\/\\d+$/) && method === 'GET':\n                //     return getThemes();\n                // case url.match(/\\/themes\\/\\d+$/) && method === 'DELETE':\n                //     return deleteThemes();\n                //\n                default:\n                    return next.handle(request);\n            }\n        }\n    //\n    //     // fonctions de routage\n    //\n    //     // ----------------------------\n    //     // FONCTIONS USER\n    //     // ----------------------------\n    //\n    //     // Valide ou non l'authentification\n    //     function authenticate() {\n    //         const { email, password } = body;\n    //         const user = users.find( x => x.email === email && x.password === password);\n    //         if (!user) {\n    //             return error('Le nom d\\'utilisateur ou le mot de passe est incorrect.');\n    //         }\n    //         return ok({\n    //             id: user.id,\n    //             email: user.email,\n    //             prenom: user.prenom,\n    //             nom: user.nom,\n    //             token: 'fake-jwt-token'\n    //         });\n    //     }\n    //\n    //     // Enregistre l'utilisateur\n    //     function registerUser() {\n    //         const user = body;\n    //         if (users.find(x => x.email === user.email)) {\n    //             return error('Le nom d\\'utilisateur \"' + user.email + '\" est déjà pris. Veuillez en choisir un autre.');\n    //         }\n    //         user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n    //         users.push(user);\n    //         localStorage.setItem('users', JSON.stringify(users));\n    //         return ok();\n    //     }\n    //\n    //     // Met à jour l'utilisateur\n    //     function updateUser() {\n    //         const user = body;\n    //\n    //         // dans un 1er temps, retire l'utilisateur de la liste via son id\n    //         const updatedUser = users.find(x => x.id === idFromUrl());\n    //         users = users.filter(x => x.id !== idFromUrl());\n    //\n    //         // pour chacun de ses champs (sauf id) on met à jour seulement si une valeur est renseignée dans le formulaire\n    //         user.id = idFromUrl();\n    //         user.prenom = user.prenom.length ? user.prenom : updatedUser.prenom;\n    //         user.nom = user.nom.length ? user.nom : updatedUser.nom;\n    //         user.email = user.email.length ? user.email : updatedUser.email;\n    //         user.password = user.email.password ? user.password : updatedUser.password;\n    //\n    //         // puis on ajoute ce même utilisateur modifié en gardant le même id\n    //         users.push(user);\n    //         localStorage.setItem('users', JSON.stringify(users));\n    //         localStorage.setItem('currentUser', JSON.stringify(user));\n    //\n    //         return ok();\n    //     }\n    //\n    //     // Récupère l'ensemble des utilisateurs\n    //     function getUsers() {\n    //         checkLog();\n    //         return ok(users);\n    //     }\n    //\n    //     // Supprime un utilisateur\n    //     function deleteUser() {\n    //         checkLog();\n    //         users = users.filter(x => x.id !== idFromUrl());\n    //         localStorage.setItem('users', JSON.stringify(users));\n    //         return ok();\n    //     }\n    //\n    //     // ----------------------------\n    //     // FONCTIONS QUESTIONNAIRE\n    //     // ----------------------------\n    //\n    //     // Récupère tous les questionnaires créés par l'utilisateur en cours\n    //     function getQuestionnairesByIdUser() {\n    //         checkLog();\n    //         return ok(questionnaires.filter(x => x.administrateur.id == idFromUrl()));\n    //     }\n    //\n    //     // Récupère le questionnaire à partir de son id\n    //     function getQuestionnaireById() {\n    //         return ok(questionnaires.find(x => x.id === idFromUrl()));\n    //     }\n    //\n    //     // Enregistre un questionnaire\n    //     function registerQuestionnaire() {\n    //         checkLog();\n    //         const questionnaire = body;\n    //         questionnaire.id = questionnaires.length ? Math.max(...questionnaires.map(x => x.id)) + 1 : 1;\n    //         questionnaires.push(questionnaire);\n    //         console.log('Questionnaire créé');\n    //         console.log('id : ' + questionnaire.id);\n    //         console.log('idUser : ' + questionnaire.administrateur.id);\n    //         console.log('titre : ' + questionnaire.titre);\n    //         console.log('description : ' + questionnaire.description);\n    //         console.log('merci : ' + questionnaire.msgMerci);\n    //         console.log('anonymous : ' + questionnaire.anonymous);\n    //         console.log('dateCreation : ' + questionnaire.dateCreation);\n    //         console.log('datePeremption : ' + questionnaire.datePeremption);\n    //\n    //         localStorage.setItem('questionnaires', JSON.stringify(questionnaires));\n    //         return ok();\n    //     }\n    //\n    //     // Met à jour le questionnaire\n    //     function updateQuestionnaire() {\n    //         checkLog();\n    //         const questionnaire = body;\n    //         // dans un 1er temps, retire le questionnaire de la liste via son id\n    //         const updatedQuestionnaire = questionnaires.find(x => x.id === idFromUrl());\n    //         questionnaires = questionnaires.filter(x => x.id !== idFromUrl());\n    //\n    //         // pour chacun de ses champs non booléen (sauf id) on met à jour seulement si une valeur est renseignée dans le formulaire\n    //         // pour les booléens, on laisse tel quel\n    //         questionnaire.id = idFromUrl();\n    //         questionnaire.titre = questionnaire.titre.length ? questionnaire.titre : updatedQuestionnaire.titre;\n    //         questionnaire.description = questionnaire.description.length ? questionnaire.description : updatedQuestionnaire.description;\n    //         console.log('1 : ' + questionnaire.merci);\n    //         questionnaire.merci = questionnaire.merci.length ? questionnaire.merci : updatedQuestionnaire.merci;\n    //         console.log('1 : ' + questionnaire.merci);\n    //         questionnaire.administrateur.id = questionnaire.administrateur.id !== undefined ? questionnaire.administrateur.id : updatedQuestionnaire.administrateur.id;\n    //         questionnaire.anonymous = questionnaire.anonymous;\n    //\n    //         console.log('Questionnaire mis à jour');\n    //         console.log('id : ' + questionnaire.id);\n    //         console.log('idUser : ' + questionnaire.idUser);\n    //         console.log('titre : ' + questionnaire.titre);\n    //         console.log('description : ' + questionnaire.description);\n    //         console.log('merci : ' + questionnaire.merci);\n    //         console.log('anonymous : ' + questionnaire.anonymous);\n    //         console.log('dateCreation : ' + questionnaire.dateCreation);\n    //         console.log('datePeremption : ' + questionnaire.datePeremption);\n    //\n    //         // puis on ajoute ce même questionnaire modifié en gardant le même id\n    //         questionnaires.push(questionnaire);\n    //         localStorage.setItem('questionnaires', JSON.stringify(questionnaires));\n    //         return ok();\n    //     }\n    //\n    //     // Supprime un questionnaire\n    //     function deleteQuestionnaire() {\n    //         checkLog();\n    //         // supprime le questionnaire et les questions associées\n    //         questionnaires = questionnaires.filter(x => x.id !== idFromUrl());\n    //         questions = questions.filter(x => x.idQuestionnaire !== idFromUrl());\n    //         localStorage.setItem('questions', JSON.stringify(questions));\n    //         localStorage.setItem('questionnaires', JSON.stringify(questionnaires));\n    //         return ok();\n    //     }\n    //\n    //     // FONCTIONS QUESTIONS\n    //     function createQuestion() {\n    //         checkLog();\n    //         const question = body;\n    //         question.id = questions.length ? Math.max(...questions.map(x => x.id)) + 1 : 1;\n    //         console.log('Nouvel IDQuestion : ' + question.id);\n    //         questions.push(question);\n    //         console.log('Question créée');\n    //         console.log('id : ' + question.id);\n    //         console.log('idQuestionnaire : ' + question.idQuestionnaire);\n    //         console.log('idTheme : ' + question.idTheme);\n    //         console.log('valeur : ' + question.valeur);\n    //         console.log('type : ' + question.type);\n    //         console.log('isRequired : ' + question.isRequired);\n    //         console.log('isFilter : ' + question.isFilter);\n    //         console.log('hasGraph : ' + question.hasGraph);\n    //         console.log('order : ' + question.order);\n    //\n    //         localStorage.setItem('questions', JSON.stringify(questions));\n    //         return ok();\n    //     }\n    //\n    //     function  updateQuestion() {\n    //         checkLog();\n    //         const question = body;\n    //         // dans un 1er temps, retire la question de la liste via son id\n    //         const updatedQuestion = questions.find(x => x.id === idFromUrl());\n    //         questions = questions.filter(x => x.id !== idFromUrl());\n    //\n    //         // pour chacun de ses champs non booléens (sauf id) on met à jour seulement si une valeur est renseignée dans le formulaire\n    //         // pour les booléens on laisse tel quel\n    //         question.id = idFromUrl();\n    //         question.valeur = question.valeur.length ? question.valeur : updatedQuestion.valeur;\n    //         question.type = question.type.length ? question.type : updatedQuestion.type;\n    //         question.idTheme = question.idTheme !== undefined ? question.idTheme : updatedQuestion.idTheme;\n    //         question.idQuestionnaire = question.idQuestionnaire !== undefined ? question.idQuestionnaire : updatedQuestion.idQuestionnaire;\n    //\n    //         // puis on ajoute cette même question modifiée en gardant le même id\n    //         questions.push(question);\n    //\n    //         console.log('Question mise à jour');\n    //         console.log('id : ' + question.id);\n    //         console.log('idQuestionnaire : ' + question.idQuestionnaire);\n    //         console.log('idTheme : ' + question.idTheme);\n    //         console.log('valeur : ' + question.valeur);\n    //         console.log('type : ' + question.type);\n    //         console.log('isRequired : ' + question.isRequired);\n    //         console.log('isFilter : ' + question.isFilter);\n    //         console.log('hasGraph : ' + question.hasGraph);\n    //         console.log('order : ' + question.order);\n    //\n    //         localStorage.setItem('questions', JSON.stringify(questions));\n    //         return ok();\n    //     }\n    //\n    //     function deleteQuestion() {\n    //         checkLog();\n    //         questions = questions.filter(x => x.id !== idFromUrl());\n    //         propositions = propositions.filter(x => x.idQuestion !== idFromUrl());\n    //         // supprime la question ainsi que les propositions associées\n    //         localStorage.setItem('propositions', JSON.stringify(propositions));\n    //         localStorage.setItem('questions', JSON.stringify(questions));\n    //         return ok();\n    //     }\n    //\n    //     function getQuestionById() {\n    //         return ok(questions.find(x => x.id === idFromUrl()));\n    //     }\n    //\n    //     function getQuestionsByIdQuestionnaire() {\n    //         return ok(questions.filter(x => x.idQuestionnaire == idFromUrl()));\n    //     }\n    //\n    //     // FONCTIONS PROPOSITIONS\n    //\n    //     function getPropositions() {\n    //         return ok(propositions.filter(x => x.idQuestion == idFromUrl()));\n    //     }\n    //\n    //     function createProposition() {\n    //         checkLog();\n    //         const proposition = body;\n    //         proposition.id = propositions.length ? Math.max(...propositions.map(x => x.id)) + 1 : 1;\n    //         propositions.push(proposition);\n    //         console.log('Proposition créée');\n    //         console.log('id : ' + proposition.id);\n    //         console.log('idQuestion : ' + proposition.idQuestion);\n    //         console.log('valeur : ' + proposition.valeur);\n    //         console.log('order : ' + proposition.order);\n    //         localStorage.setItem('propositions', JSON.stringify(propositions));\n    //         return ok();\n    //     }\n    //\n    //     function deletePropositions() {\n    //         checkLog();\n    //         propositions = propositions.filter(x => x.idQuestion != idFromUrl());\n    //         localStorage.setItem('propositions', JSON.stringify(propositions));\n    //         return ok();\n    //     }\n    //\n    //\n    //     // FONCTIONS THEMES\n    //\n    //     function getThemes() {\n    //         return ok(themes.filter(x => x.idQuestionnaire == idFromUrl()));\n    //     }\n    //\n    //     function createTheme() {\n    //         checkLog();\n    //         const theme = body;\n    //         theme.id = themes.length ? Math.max(...themes.map(x => x.id)) + 1 : 1;\n    //         themes.push(theme);\n    //         localStorage.setItem('themes', JSON.stringify(themes));\n    //         return ok();\n    //     }\n    //\n    //     function deleteThemes() {\n    //         checkLog();\n    //         themes = themes.filter(x => x.idQuestionnaire !== idFromUrl());\n    //         localStorage.setItem('themes', JSON.stringify(themes));\n    //         return ok();\n    //     }\n    //\n    //     // helper functions\n    //\n    //     function ok(body?) {\n    //         return of(new HttpResponse({ status: 200, body }));\n    //     }\n    //\n    //     function error(message) {\n    //         return throwError({error: { message }});\n    //     }\n    //\n    //     function unauthorized() {\n    //         return throwError({ status: 401, error: { message: 'Unauthorized' } });\n    //     }\n    //\n    //     function checkLog() {\n    //         if (!isLoggedIn()) {\n    //             return unauthorized();\n    //         }\n    //     }\n    //\n    //     function isLoggedIn() {\n    //         return headers.get('Authorization') === 'Bearer fake-jwt-token';\n    //     }\n    //\n    //     function idFromUrl() {\n    //         const urlParts = url.split('/');\n    //         return parseInt(urlParts[urlParts.length - 1]);\n    //     }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\n/* L'intercepteur JWT intercepte les demandes http de l'application pour ajouter un jeton d'authentification HWT\n * à l'en-tête Authorization si l'utilisateur est connecté.\n */\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n               setHeaders: {\n                   Authorization: `Bearer ${currentUser.token}`\n               }\n            });\n        }\n        return next.handle(request);\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user';\nimport {AuthService} from '../services/auth.service';\nimport {UserService} from '../services/user.service';\nimport {first} from 'rxjs/operators';\nimport {QuestionnaireService} from '../services/questionnaire.service';\nimport {Questionnaire} from '../models/questionnaire';\nimport {Router} from '@angular/router';\nimport {QuestionService} from '../services/question.service';\nimport {environment} from '../../environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n// Le composant home contient la logique permettant d'afficher l'utilisateur actuel ainsi que la liste de tous ses questionnaires\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n  users = [];\n  questionnaires = [];\n  apiUrl: string;\n\n  constructor(\n      private authService: AuthService,\n      private userService: UserService,\n      private questionnaireService: QuestionnaireService,\n      private questionService: QuestionService,\n      private router: Router\n  ) {\n    this.currentUser = this.authService.currentUserValue;\n    this.apiUrl = environment.apiUrl;\n  }\n\n  ngOnInit() {\n    this.loadAllUsers();\n    this.loadAllQuestionnaires();\n  }\n\n  // provisoire, à supprimer par la suite\n  private loadAllUsers() {\n    this.userService.getAll()\n        .pipe(first())\n        .subscribe(users => this.users = users);\n  }\n\n  deleteUser(id: number) {\n    this.userService.delete(id)\n        .pipe(first())\n        .subscribe(() => this.loadAllUsers());\n  }\n\n  // Charge la liste de questionnaires en fonction de l'id de l'utilisateur\n  private loadAllQuestionnaires() {\n    this.questionnaireService.getAllByIdUser(this.currentUser.id)\n        .pipe(first())\n        .subscribe(questionnaires => {\n          this.questionnaires = questionnaires;\n          this.loadNbQuestions();\n        });\n  }\n\n  deleteQuestionnaire(id: number) {\n    this.questionnaireService.delete(id)\n        .pipe(first())\n        .subscribe(() => this.loadAllQuestionnaires());\n  }\n\n  loadNbQuestions() {\n    for (const questionnaire of this.questionnaires) {\n      this.questionService.readAllByIdQuestionnaire(questionnaire.id)\n          .subscribe(questions => {\n            questionnaire.nbQuestions = questions.length;\n          });\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\nimport {AlertService} from '../services/alert.service';\nimport {first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/* Le composant de connexion utilise le service d'authentification pour se connecter à l'application.\n * Si l'utilisateur est déjà connecté, il est automatiquement redirigé vers la page d'accueil.\n * L'objet loginForm: FormGroup définit les contrôles et les validateurs du formulaires et est utilisé pour accéder\n * aux données entrées dans le formulaire.\n */\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private authService: AuthService,\n      private alertService: AlertService\n  ) {\n    // Redirige vers la page d'accueil si l'utilisateur est déjà connecté\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // récupère l'url de retour à partir des paramètres ou par défaut à '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // accès plus facile aux champs du formulaire\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire n'est pas valide\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f.email.value, this.f.password.value)\n        .pipe(first())\n        .subscribe(\n            date => {\n              this.router.navigate([this.returnUrl]);\n            },\n            error => {\n              this.alertService.error(error);\n              this.loading = false;\n            }\n        );\n  }\n}\n","export class Proposition {\n\n    id: number;\n    valeur: string;\n    idQuestion: number;\n    order: number;\n\n    constructor() {}\n}\n","import {User} from './user';\n\nexport class Questionnaire {\n    id: number;\n    idUser: number;\n    titre: string;\n    description: string;\n    merci: string;\n    anonymous: boolean;\n    administrateur: User;\n    dateCreation: Date;\n    datePeremption: Date;\n    url: string;\n\n    constructor() { }\n\n    toString() {\n        console.log('--- QUESTIONNAIRE ---');\n        console.log('id: ' + this.id);\n        console.log('idUser: ' + this.idUser);\n        console.log('titre: ' + this.titre);\n        console.log('description: ' + this.description);\n        console.log('merci: ' + this.merci);\n        console.log('anonymous: ' + this.anonymous);\n        console.log('administrateur: ' + this.administrateur);\n        console.log('dateCreation: ' + this.dateCreation);\n        console.log('datePeremption: ' + this.datePeremption);\n        console.log('url: ' + this.url);\n    }\n}\n","export class User {\n    id: number;\n    email: string;\n    password: string;\n    prenom: string;\n    nom: string;\n    // token utilisé pour contenir le jeton JWT renvoyé par l'API en cas d'authentification réussie\n    token: string;\n    dateCreation: Date;\n\n    constructor() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215YWNjb3VudC9teWFjY291bnQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {UserService} from '../services/user.service';\nimport {User} from '../models/user';\nimport {AlertService} from '../services/alert.service';\nimport {first} from 'rxjs/operators';\nimport {QuestionnaireService} from '../services/questionnaire.service';\nimport {QuestionService} from '../services/question.service';\n\n\n@Component({\n  selector: 'app-myaccount',\n  templateUrl: './myaccount.component.html',\n  styleUrls: ['./myaccount.component.scss']\n})\nexport class MyaccountComponent implements OnInit {\n  updateUserForm: FormGroup;\n  loading = false;\n  submitted = false;\n  currentUser: User;\n  message: string;\n  nbQuestionnairesCrees: number;\n  nbQuestionsCreees: number;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private userService: UserService,\n              private alertService: AlertService,\n              private questionnaireService: QuestionnaireService,\n              private questionService: QuestionService,\n              private router: Router) {\n    this.currentUser = this.authService.currentUserValue;\n  }\n\n  ngOnInit() {\n    this.updateUserForm = this.formBuilder.group({\n      prenom: [this.currentUser.prenom],\n      nom: [this.currentUser.nom],\n      email: [this.currentUser.email],\n      password: ['', Validators.minLength(6)],\n      confirmPassword: ['', Validators.minLength(6)]\n    }, { validators: this.checkPasswords});\n    this.nbQuestionsCreees = 0;\n    this.questionnaireService.getAllByIdUser(this.currentUser.id)\n        .subscribe(questionnaires => {\n          this.nbQuestionnairesCrees = questionnaires.length;\n          for (const questionnaire of questionnaires) {\n            this.questionService.readAllByIdQuestionnaire(questionnaire.id)\n                .subscribe(questions => this.nbQuestionsCreees += questions.length);\n          }\n        });\n  }\n\n  checkPasswords: ValidatorFn = (group: FormGroup): ValidationErrors | null => {\n    const pass = group.get('password').value;\n    const confirmPass = group.get('confirmPassword').value;\n    return pass === confirmPass ? null : { notSame: true };\n  }\n\n  // accès simplifié aux champs du formulaire\n  get f() {\n    return this.updateUserForm.controls;\n  }\n\n\n\n  onSubmit() {\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire est invalide\n    if (this.updateUserForm.invalid) {\n      return;\n    }\n\n    delete this.updateUserForm.value.confirmPassword;\n\n    // modifie l'utilisateur actuel\n    this.userService.update(this.currentUser.id, this.updateUserForm.value)\n        .pipe(first())\n        .subscribe( data => {\n          this.alertService.success('Modifications enregistrées', true);\n          this.currentUser = this.authService.currentUserValue;\n        }\n    );\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  deleteAccount() {\n    if (confirm('Etes-vous sûr de supprimer définitivement votre compte?')) {\n      this.userService.delete(this.authService.currentUserValue.id)\n          .pipe(first())\n          .subscribe(() =>\n              this.logout()\n          );\n    }\n  }\n}\n","export default \".button-custom {\\n  border: 3px solid darkblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2V0dWRpYW50L3hpbmFwcm8vQmFyb21ldHJlLW1hbmFnZXJpYWwvRnJvbnQvc3JjL2FwcC9xdWVzdGlvbi9xdWVzdGlvbi1lZGl0L3F1ZXN0aW9uLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3F1ZXN0aW9uL3F1ZXN0aW9uLWVkaXQvcXVlc3Rpb24tZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbi9xdWVzdGlvbi1lZGl0L3F1ZXN0aW9uLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uLWN1c3RvbXtcbiAgYm9yZGVyOiAzcHggc29saWQgZGFya2JsdWU7XG59XG5cbiIsIi5idXR0b24tY3VzdG9tIHtcbiAgYm9yZGVyOiAzcHggc29saWQgZGFya2JsdWU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {QuestionService} from '../../services/question.service';\nimport {AlertService} from '../../services/alert.service';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Question} from '../../models/question';\nimport {Location} from '@angular/common';\nimport {QuestionnaireService} from '../../services/questionnaire.service';\n\n@Component({\n  selector: 'app-question-edit',\n  templateUrl: './question-edit.component.html',\n  styleUrls: ['./question-edit.component.scss']\n})\nexport class QuestionEditComponent implements OnInit {\n  questionForm: FormGroup;\n  question: Question;\n  idQuestion: number;\n  idQuestionnaire: number;\n  modification: boolean;\n  submitted = false;\n  // themes = [];\n  loading = false;\n  typeQuestion: string;\n\n  constructor(private formBuilder: FormBuilder,\n              private questionService: QuestionService,\n              private questionnaireService: QuestionnaireService,\n              private alertService: AlertService,\n              private authService: AuthService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private location: Location) { }\n\n  ngOnInit() {\n\n    // Récupère les identifiants du questionnaire et de la question via l'url\n    this.idQuestionnaire = this.route.snapshot.params.idQuestionnaire;\n    this.idQuestion = this.route.snapshot.params.idQuestion;\n\n    this.questionnaireService.getById(this.idQuestionnaire)\n        .subscribe( questionnaire => {\n            if (questionnaire === null) {\n                this.alertService.clear();\n                this.alertService.error('Le questionnaire demandé n\\'existe pas. Retour au menu principal.', true);\n                this.router.navigate(['/']);\n            }\n        });\n\n    this.questionForm = this.formBuilder.group({\n        idQuestionnaire: [this.idQuestionnaire],\n        valeur: ['', Validators.required],\n        typeQuestion: [''],\n        // idTheme: [null, Validators.required],\n        isRequired: [false],\n        isFilter: [false],\n        hasGraph: [false],\n        propositions: this.formBuilder.array([])\n    });\n\n    // this.loadAllThemes(this.idQuestionnaire);\n    // en cas de modification, on renseigne dans le formulaire les informations déjà présentes\n    if (this.idQuestion !== undefined) {\n        this.modification = true;\n        this.questionService.read(this.idQuestion)\n            .subscribe(question => {\n                if (question !== null) {\n                    this.question = question;\n                    this.typeQuestion = question.typeQuestion;\n                    this.questionForm = this.formBuilder.group({\n                        idQuestionnaire: [this.idQuestionnaire],\n                        valeur: [question.valeur, Validators.required],\n                        typeQuestion: [question.typeQuestion, Validators.required],\n                        // idTheme: [question.idTheme, Validators.required],\n                        isRequired: [question.isRequired, Validators.required],\n                        isFilter: [question.isFilter, Validators.required],\n                        hasGraph: [question.hasGraph, Validators.required],\n                        propositions: this.formBuilder.array([])\n                    });\n                    this.question.propositions.forEach( (item) => {\n                        this.addPropositions(item.valeur);\n                    });\n                } else {\n                    this.alertService.clear();\n                    this.alertService.error('La question demandée n\\'existe pas. Retour au questionnaire.', true);\n                    this.router.navigate(['/edit-questionnaire', this.idQuestionnaire]);\n                }\n            });\n    // sinon, on charge deux propositions vides pour commencer\n    } else {\n        this.addPropositions('');\n        this.addPropositions('');\n    }\n  }\n\n  // accès simplifié aux champs du formulaire\n  get f() {\n    return this.questionForm.controls;\n  }\n\n  get propositions(): FormArray {\n      return this.questionForm.get('propositions') as FormArray;\n  }\n\n  addPropositions(value: string) {\n      this.propositions.push(this.formBuilder.group({valeur: value === null ? '' : value}));\n  }\n\n  removeProposition(i: number) {\n      this.propositions.removeAt(i);\n  }\n\n\n  // loadAllThemes(idQuestionnaire: number) {\n  //     this.themes.push('Thème A');\n  //     this.themes.push('Thème B');\n  //     this.themes.push('Thème C');\n  // }\n\n  onNewQuestion() {\n    this.questionForm.value.typeQuestion = this.typeQuestion;\n    console.log(this.questionForm.value);\n\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire est invalide ; cas particulier pour le typeQuestion...\n    if (this.questionForm.invalid || this.typeQuestion === undefined) {\n      return;\n    }\n\n    this.loading = true;\n    // enregistre le nouveau questionnaire\n    if (this.modification) {\n      this.questionService.update(this.idQuestion, this.questionForm.value, this.propositions.value)\n          .subscribe(data => {\n                this.alertService.success('Question enregistrée', true);\n              }, error => {\n                  this.alertService.error(error);\n              }\n          );\n    } else {\n      this.questionService.create(this.questionForm.value, this.propositions.value)\n          .subscribe(data => {\n                  this.alertService.success('Question enregistrée', true);\n              }, error => {\n                this.alertService.error(error);\n              }\n          );\n    }\n    // ci-dessous, géré par le back\n    // this.propositionService.deleteAll(this.idQuestion).subscribe();\n    // for (let i = 0; i < this.propositions.length; i++) {\n    //   const p = new Proposition();\n    //   p.idQuestion = this.idQuestion;\n    //   p.libelle = this.propositions.value[i].libelle;\n    //   p.order = i + 1;\n    //   this.propositionService.create(p).subscribe();\n    // }\n    this.router.navigate(['/edit-questionnaire', this.idQuestionnaire]);\n    this.loading = false;\n  }\n\n  addCheckBox() {\n      this.typeQuestion = 'CHECKBOX';\n      if (this.propositions.length === 0) {\n          this.addPropositions('');\n          this.addPropositions('');\n      }\n  }\n\n  addRadioBtn() {\n      this.typeQuestion = 'RADIO';\n      if (this.propositions.length === 0) {\n          this.addPropositions('');\n          this.addPropositions('');\n      }\n  }\n\n  addSelect() {\n      this.typeQuestion = 'COMBOBOX';\n      if (this.propositions.length === 0) {\n          this.addPropositions('');\n          this.addPropositions('');\n      }\n  }\n\n  addDatePicker() {\n      this.typeQuestion = 'DATE';\n      this.propositions.clear();\n  }\n\n  addInput() {\n      this.typeQuestion = 'OUVERT';\n      this.propositions.clear();\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uL3F1ZXN0aW9uLXNob3cvcXVlc3Rpb24tc2hvdy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {QuestionService} from '../../services/question.service';\nimport {Question} from '../../models/question';\n\n@Component({\n    selector: 'app-question-show',\n    templateUrl: './question-show.component.html',\n    styleUrls: ['./question-show.component.scss']\n})\nexport class QuestionShowComponent implements OnInit, OnChanges {\n    @Input() idQuestion;\n    chosenResponse: string;\n    idQuestionnaire: number;\n    propositions = [];\n    question: Question;\n    type: string;\n    apercuQuestion: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private questionService: QuestionService) { }\n\n    ngOnInit() {\n        this.idQuestionnaire = this.route.snapshot.params.idQuestionnaire;\n        this.apercuQuestion = false;\n        // Cas où on affiche uniquement la question (aperçu) et pas tout le questionnaire\n        if (this.idQuestion === undefined) {\n            this.idQuestion = this.route.snapshot.params.idQuestion;\n            this.apercuQuestion = true;\n        }\n        this.questionService.read(this.idQuestion)\n            .subscribe(question => {\n                this.question = question;\n                console.log(question.typeQuestion);\n                if (question.typeQuestion === 'COMBOBOX' || question.typeQuestion === 'CHECKBOX' || question.typeQuestion === 'RADIO') {\n                    this.propositions = question.propositions;\n                }\n            });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        console.log(changes);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ubmFpcmUvcXVlc3Rpb25uYWlyZS1hbnN3ZXIvcXVlc3Rpb25uYWlyZS1hbnN3ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Questionnaire} from '../../models/questionnaire';\nimport {QuestionService} from '../../services/question.service';\nimport {QuestionnaireService} from '../../services/questionnaire.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AlertService} from '../../services/alert.service';\nimport {ReponseService} from '../../services/reponse.service';\nimport {Question} from '../../models/question';\nimport {Proposition} from '../../models/proposition';\n\n@Component({\n  selector: 'app-questionnaire-answer',\n  templateUrl: './questionnaire-answer.component.html',\n  styleUrls: ['./questionnaire-answer.component.scss']\n})\nexport class QuestionnaireAnswerComponent implements OnInit {\n  answerForm: FormGroup;\n  public questionnaire: Questionnaire;\n  submitted = false;\n  loading = false;\n  done = false;\n  prenom: string;\n\n\n  constructor(private formBuilder: FormBuilder,\n              private questionService: QuestionService,\n              private questionnaireService: QuestionnaireService,\n              private alertService: AlertService,\n              private reponseService: ReponseService,\n              private route: ActivatedRoute,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.answerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      questions: this.formBuilder.array([])\n    });\n\n    // permet la redirection en cas d'identifiant inexistant\n    this.questionnaireService.getById(this.route.snapshot.params.id)\n        .subscribe(questionnaire => {\n          if (questionnaire !== null) {\n            this.questionnaire = questionnaire;\n          } else {\n            this.alertService.clear();\n            this.alertService.error('Le questionnaire demandé n\\'existe pas.', true);\n            this.router.navigate(['/login']);\n          }\n        });\n    // permet de récupérer l'ensemble des questions et des propositions liées à ce questionnaire\n    this.questionService.readAllByIdQuestionnaire(this.route.snapshot.params.id)\n        .subscribe(questions => {\n          questions.forEach( (item, index) => {\n            console.log(item.valeur);\n            this.addQuestion(item);\n            item.propositions.forEach((item2) => {\n              this.addProposition(index, item2);\n            });\n          });\n        });\n  }\n\n  initQuestion(question: Question) {\n    const prop = new Proposition();\n    prop.valeur = 'OUIII';\n    prop.id = 54;\n    return this.formBuilder.group({\n      idQuestion: [question.id],\n      valeurQuestion: [question.valeur],\n      typeQuestion: [question.typeQuestion],\n      isRequired: [question.isRequired],\n      order: [''],\n      propositions: this.formBuilder.array([])\n    });\n  }\n\n  initProposition(proposition: Proposition) {\n    return this.formBuilder.group({\n      idProp: [proposition.id],\n      valeurProp: [proposition.valeur]\n    });\n  }\n\n  get questions(): FormArray {\n    return this.answerForm.get('questions') as FormArray;\n  }\n\n  addQuestion(question: Question) {\n    this.questions.push(this.initQuestion(question));\n  }\n\n  addProposition(j, proposition: Proposition) {\n    const control = this.questions.controls[j].get('propositions') as FormArray;\n    control.push(this.initProposition(proposition));\n  }\n\n  getQuestions(form) {\n    return form.controls.questions.controls;\n  }\n\n  getPropositions(question) {\n    return question.get('propositions').controls;\n  }\n\n\n  // ngOnInit(): void {\n  //   this.questionnaireService.getById(this.route.snapshot.params.id)\n  //       .subscribe(questionnaire => {\n  //         if (questionnaire !== null) {\n  //           this.questionnaire = questionnaire;\n  //         } else {\n  //           this.alertService.clear();\n  //           this.alertService.error('Le questionnaire demandé n\\'existe pas.', true);\n  //           this.router.navigate(['/login']);\n  //         }\n  //       });\n  //   this.questionService.readAllByIdQuestionnaire(this.route.snapshot.params.id)\n  //       .subscribe(questions => {\n  //         questions.forEach( (item) => {\n  //           this.addQuestion(item);\n  //           item.propositions.forEach((item2) => {\n  //             this.addProposition(item2);\n  //           });\n  //         });\n  //       });\n  //   this.answerForm = this.formBuilder.group({\n  //     firstName: ['', Validators.required],\n  //     lastName: ['', Validators.required],\n  //     questions: this.formBuilder.array([])\n  //   });\n  // }\n  //\n  // accès simplifié aux champs du formulaire\n  get f() {\n    return this.answerForm.controls;\n  }\n  //\n  // get questions(): FormArray {\n  //   return this.answerForm.get('questions') as FormArray;\n  // }\n  //\n  // addQuestion(question: Question) {\n  //     this.questions.push(this.formBuilder.group({\n  //       valeur: question.valeur,\n  //       typeQuestion: question.typeQuestion,\n  //       isRequired : question.isRequired,\n  //       order: question.order === null ? 0 : question.order,\n  //       propositions: this.formBuilder.array(question.propositions)\n  //     }));\n  // }\n  //\n  // get propositions(): FormArray {\n  //   return this.answerForm.get('questions').get('propositions') as FormArray;\n  // }\n  //\n  // addProposition(proposition: Proposition) {\n  //     this.propositions.push(this.formBuilder.group({\n  //       valeur: proposition.valeur,\n  //       id: proposition.id\n  //     }));\n  // }\n  //\n  onSubmit(formGroup: FormGroup) {\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire est invalide\n    if (this.answerForm.invalid) {\n      return;\n    }\n\n    this.prenom = this.answerForm.value.firstName;\n\n    // enregistre le nouvel utilisateur puis le connecte immédiatement\n    // this.loading = true;\n    // this.reponseService.create(this.answerForm.value)\n    //     .pipe(first())\n    //     .subscribe(\n    //         data => {\n    //           this.alertService.success('Participation enregistrée', true);\n    //           this.done = true;\n    //         }, error => {\n    //           this.alertService.error(error);\n    //           this.loading = false;\n    //         }\n    //     );\n    this.done = true;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ubmFpcmUvcXVlc3Rpb25uYWlyZS1lZGl0L3F1ZXN0aW9ubmFpcmUtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {Question} from '../../models/question';\nimport {Questionnaire} from '../../models/questionnaire';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {QuestionnaireService} from '../../services/questionnaire.service';\nimport {AlertService} from '../../services/alert.service';\nimport {AuthService} from '../../services/auth.service';\nimport {first} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {ThemeService} from '../../services/theme.service';\nimport {QuestionService} from '../../services/question.service';\nimport {Theme} from '../../models/theme';\n\n@Component({\n  selector: 'app-questionnaire-edit',\n  templateUrl: './questionnaire-edit.component.html',\n  styleUrls: ['./questionnaire-edit.component.scss']\n\n})\nexport class QuestionnaireEditComponent implements OnInit {\n  question: Question;\n  questionnaire: Questionnaire;\n  questionnaireForm: FormGroup;\n  questions = [];\n  questionnaires = [];\n  idQuestionnaire: number;\n  loading = false;\n  submitted = false;\n  modification = false;\n\n  constructor(private fb: FormBuilder,\n              private questionnaireService: QuestionnaireService,\n              private alertService: AlertService,\n              private authService: AuthService,\n              private themeService: ThemeService,\n              private questionService: QuestionService,\n              private location: Location,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.questionnaireForm = this.fb.group({\n      titre: ['', Validators.required],\n      description: ['', Validators.required],\n      merci: ['', Validators.required],\n      anonymous: [false],\n      idUser: [this.authService.currentUserValue.id]\n      // themes: this.fb.array([])\n    });\n\n    this.idQuestionnaire = this.route.snapshot.params.id;\n    // en cas de modification, on renseigne dans le formulaire les informations déjà présentes\n    if (this.idQuestionnaire !== undefined) {\n      this.modification = true;\n      this.questionnaireService.getById(this.idQuestionnaire)\n          .subscribe(questionnaire => {\n            if (questionnaire !== null) {\n              this.loadAllQuestions(this.idQuestionnaire);\n              this.loadAllThemes(this.idQuestionnaire);\n              this.questionnaireForm = this.fb.group({\n                titre: [questionnaire.titre, Validators.required],\n                description: [questionnaire.description, Validators.required],\n                merci: [questionnaire.merci, Validators.required],\n                anonymous: [questionnaire.anonymous],\n                idUser: [this.authService.currentUserValue.id],\n                // themes: this.fb.array([])\n              });\n            } else {\n              this.alertService.clear();\n              this.alertService.error('Le questionnaire demandé n\\'existe pas. Retour au menu principal.', true);\n              this.router.navigate(['/']);\n            }\n          });\n    }\n  }\n\n  // accès simplifié aux champs du formulaire\n  get f() {\n    return this.questionnaireForm.controls;\n  }\n\n  get themes(): FormArray {\n    return this.questionnaireForm.get('themes') as FormArray;\n  }\n\n  addTheme(value: string) {\n    this.themes.push(this.fb.group({theme: value === null ? '' : value}));\n  }\n\n  removeTheme(i: number) {\n    this.themes.removeAt(i);\n  }\n\n  onNewQuestionnaire() {\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire est invalide\n    if (this.questionnaireForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    // enregistre le nouveau questionnaire\n    if (this.modification) {\n      this.questionnaireService.update(this.idQuestionnaire, this.questionnaireForm.value)\n          .pipe(first())\n          .subscribe(\n              data => {\n                // this.themeService.deleteAll(this.idQuestionnaire).subscribe();\n                // for (let i = 1; i <= this.themes.length; i++) {\n                //   const t = new Theme();\n                //   t.idQuestionnaire = this.idQuestionnaire;\n                //   t.theme = this.themes.at(i).value;\n                //   t.order = i;\n                //   this.themeService.create(t);\n                // }\n                this.alertService.success('Questionnaire enregistré', true);\n              }, error => {\n                this.alertService.error(error);\n              }\n      );\n    } else {\n      this.questionnaireService.register(this.questionnaireForm.value)\n          .pipe(first())\n          .subscribe(\n              data => {\n                this.alertService.success('Questionnaire enregistré', true);\n              }, error => {\n                this.alertService.error(error);\n              }\n          );\n    }\n    this.loading = false;\n  }\n\n  loadAllQuestions(idQuestionnaire: number) {\n    this.questionService.readAllByIdQuestionnaire(idQuestionnaire)\n        .subscribe(questions => {\n          this.questions = questions;\n        });\n  }\n\n\n  loadAllThemes(idQuestion: number) {\n    // const p1 = new Proposition();\n    // p1.id = 1;\n    // p1.idQuestion = this.idQuestion;\n    // p1.libelle = 'Première proposition';\n    // const p2 = new Proposition();\n    // p2.id = 2;\n    // p2.idQuestion = this.idQuestion;\n    // p2.libelle = 'Deuxième proposition';\n    // this.addPropositions(p1.libelle);\n    // this.addPropositions(p2.libelle);\n    // this.themeService.readAllByIdQuestionnaire(this.idQuestionnaire)\n    //     .subscribe(themes => {\n    //       themes.forEach(function(item) {\n    //         console.log('Thème : ' + item.id + ', ' + item.idQuestionnaire + ', ' + item.theme);\n    //         this.addTheme(item.theme);\n    //       });\n    //     });\n  }\n\n  deleteQuestion(idQuestion: number) {\n    this.questionService.delete(idQuestion).subscribe(() => {\n      this.loadAllQuestions(this.idQuestionnaire);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ubmFpcmUvcXVlc3Rpb25uYWlyZS1zaG93L3F1ZXN0aW9ubmFpcmUtc2hvdy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Questionnaire} from '../../models/questionnaire';\nimport {QuestionService} from '../../services/question.service';\nimport {QuestionnaireService} from '../../services/questionnaire.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AlertService} from '../../services/alert.service';\n\n@Component({\n  selector: 'app-questionnaire-show',\n  templateUrl: './questionnaire-show.component.html',\n  styleUrls: ['./questionnaire-show.component.scss']\n})\nexport class QuestionnaireShowComponent implements OnInit {\n  public questionnaire: Questionnaire;\n  questions = [];\n\n  constructor(private questionService: QuestionService,\n              private questionnaireService: QuestionnaireService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private alertService: AlertService) {}\n\n  ngOnInit(): void {\n    this.questionnaireService.getById(this.route.snapshot.params.id)\n        .subscribe(questionnaire => {\n          if (questionnaire !== null) {\n            this.questionnaire = questionnaire;\n          } else {\n            this.alertService.clear();\n            this.alertService.error('Le questionnaire demandé n\\'existe pas. Retour au menu principal.', true);\n            this.router.navigate(['/']);\n          }\n        });\n    this.questionService.readAllByIdQuestionnaire(this.route.snapshot.params.id)\n        .subscribe(questions => {\n          this.questions = questions;\n        });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {UserService} from '../services/user.service';\nimport {AlertService} from '../services/alert.service';\nimport {first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\n/* Le composant d'enregistrement crée un nouvel utilisateur avec le service utilisateur lors de l'envoi du formulaire de registre.\n * Si l'utilisateur est déjà connecté, il est automatiquement redirigé vers la page d'accueil.\n */\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private router: Router,\n      private authService: AuthService,\n      private userService: UserService,\n      private alertService: AlertService\n  ) {\n    // redirige vers la page d'accueil si l'utilisateur est déjà connecté\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      prenom: ['', Validators.required],\n      nom: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n    }, { validators: this.checkPasswords});\n  }\n\n  checkPasswords: ValidatorFn = (group: FormGroup): ValidationErrors | null => {\n      const pass = group.get('password').value;\n      const confirmPass = group.get('confirmPassword').value;\n      return pass === confirmPass ? null : { 'notSame': true };\n  }\n\n  // accès simplifié aux champs du formulaire\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // réinitialise les alertes lors de la soumission du formulaire\n    this.alertService.clear();\n\n    // s'arrête ici si le formulaire est invalide\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    // enregistre le nouvel utilisateur puis le connecte immédiatement\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n        .pipe(first())\n        .subscribe(\n            data => {\n              this.alertService.success('Inscription enregistrée', true);\n              this.authService.login(this.f.email.value, this.f.password.value)\n                  .pipe(first())\n                  .subscribe(\n                      date => {\n                        this.router.navigate(['/']);\n                      },\n                      error => {\n                        this.alertService.error(error);\n                        this.loading = false;\n                      }\n                  );\n            }, error => {\n              this.alertService.error(error);\n              this.loading = false;\n            }\n        );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdGF0L2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n\n  constructor() { }\n  public barChartOptions = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n  public barChartLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n  public barChartType = 'bar';\n  public barChartLegend = true;\n  public barChartData = [\n    {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n    {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'}\n  ];\n  ngOnInit() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdGF0L2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.scss']\n})\nexport class DoughnutChartComponent implements OnInit {\n\n  public doughnutChartLabels = ['Sales Q1', 'Sales Q2', 'Sales Q3', 'Sales Q4'];\n  public doughnutChartData = [120, 150, 180, 90];\n  public doughnutChartType = 'doughnut';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdGF0L3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n\n  public pieChartLabels = ['Sales Q1', 'Sales Q2', 'Sales Q3', 'Sales Q4'];\n  public pieChartData = [120, 150, 180, 90];\n  public pieChartType = 'pie';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdGF0L3Jlc3VsdGF0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {ResultatService} from '../services/resultat.service';\n\n@Component({\n  selector: 'app-resultat',\n  templateUrl: './resultat.component.html',\n  styleUrls: ['./resultat.component.scss']\n})\nexport class ResultatComponent implements OnInit {\n  public resultatService;\n  constructor(resultatService: ResultatService) {\n    this.resultatService = resultatService;\n  }\n\n  ngOnInit() {\n  }\n  /*ObjectToCSV(data) {\n    const csvRows = [];\n    // get the headers\n    const  headers = Object.keys((data[0]));\n    csvRows.push(headers.join(','));\n    for (const row of data) {\n      const values = headers.map(header => {\n        const escaped = ('' + row[header]).replace(/\"/g, '//\"');\n        return `\"${escaped}\"`;\n      });\n      csvRows.push(values.join(','));\n    }\n    return csvRows.join('\\n');\n  }*/\n  download(data) {\n    const blob = new Blob([data], {type: 'text/csv'});\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.setAttribute('hidden', '');\n    a.setAttribute('href', url);\n    a.setAttribute('download', 'download.csv');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n  getReport() {\n    const json = this.resultatService.getData(2);\n    console.log(json);\n    /* const data = json.map(row => ({\n       question : row.question,\n       reponse : row.reponse,\n       participation : row.participation\n     }));\n    const csvData = this.ObjectToCSV(json);\n    this.download(csvData);*/\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {NavigationStart, Router} from '@angular/router';\n\n@Injectable({providedIn: 'root'})\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, config, Observable} from 'rxjs';\nimport {User} from '../models/user';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {environment} from '../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\n\n/* Le service d'authentification est utilisé pour se connecter et se déconnecter de l'application.\n * Pour se connecter, il affiche les informations d'identification de l'utilisateur sur l'API et vérifie la réponse pour un jeton JWT.\n */\nexport class AuthService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(email, password) {\n         return this.http.post<any>(`/admin/login`, { email, password })\n         // return this.http.post<any>(`/users/authenticate`, { email, password })\n            .pipe(map(user => {\n               // stocke les détails de l'utilisateur + le jeton jwt dans le stockaqe local pour conserver\n               // la connexion de l'utilisateur entre le rafraîchissement des pages\n                localStorage.setItem('currentUser', JSON.stringify(user.retour));\n                this.currentUserSubject.next(user.retour);\n                return user.retour;\n            }));\n    }\n\n    logout() {\n        // supprime l'utilisateur du stockage local et définit l'utilisateur actuel à null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {Question} from '../models/question';\nimport {User} from '../models/user';\nimport {Questionnaire} from '../models/questionnaire';\nimport {Proposition} from '../models/proposition';\nimport {map} from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class QuestionService {\n\n    constructor(private http: HttpClient) { }\n\n    readAllByIdQuestionnaire(idQuestionnaire: number) {\n        return this.http.get<Question[]>(`question/findByIdQuestionnaire/${idQuestionnaire}`);\n        // return this.http.get<Question[]>(`${environment.apiUrl}/questions/all/${idQuestionnaire}`);\n    }\n\n    read(idQuestion: number): Observable<Question> {\n        return this.http.get<any>(`/question/read/${idQuestion}`)\n            .pipe(map(data => {\n                return data.question;\n            }));\n        // return this.http.get<Question>(`${environment.apiUrl}/questions/read/${idQuestion}`);\n    }\n\n    create(question: Question, propositions: Proposition[]) {\n        function replacer(key: string, value: any) {\n            if (key === 'idQuestionnaire' || key === 'idTheme' || key === 'merci') {\n                return undefined;\n            }\n            return value;\n        }\n        question.questionnaire = new Questionnaire();\n        question.questionnaire.id = question.idQuestionnaire;\n        question.propositions = propositions;\n        const questStr = JSON.stringify(question, replacer);\n        console.log(questStr);\n        return this.http.post(`/question/create`, JSON.parse(questStr));\n        // return this.http.post(`${environment.apiUrl}/questions/create`, question);\n    }\n\n    update(id: number, question: Question, propositions: Proposition[]) {\n        function replacer(key: string, value: any) {\n            if (key === 'idQuestionnaire' || key === 'idTheme' || key === 'merci') {\n                return undefined;\n            }\n            return value;\n        }\n        question.questionnaire = new Questionnaire();\n        question.questionnaire.id = question.idQuestionnaire;\n        question.propositions = propositions;\n        const questStr = JSON.stringify(question, replacer);\n        console.log(questStr);\n        return this.http.post(`/question/update/${id}`, JSON.parse(questStr));\n        // return this.http.post(`${environment.apiUrl}/questions/update/${id}`, question);\n    }\n\n    delete(id: number) {\n         return this.http.delete(`/question/delete/${id}`);\n        // return this.http.delete(`${environment.apiUrl}/questions/${id}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Questionnaire} from '../models/questionnaire';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/user';\nimport {map} from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class QuestionnaireService {\n\n    constructor(private http: HttpClient) { }\n\n    getAllByIdUser(idUser: number) {\n        return this.http.get<Questionnaire[]>(`/questionnaire/findByIdAdministrateur/${idUser}`);\n        // return this.http.get<Questionnaire[]>(`${environment.apiUrl}/questionnaires/all/${idUser}`);\n    }\n\n    getById(idQuestionnaire: number): Observable<Questionnaire> {\n        return this.http.get<any>(`/questionnaire/read/${idQuestionnaire}`)\n            .pipe(map(data => {\n                return data.questionnaire;\n                }));\n        // return this.http.get<Questionnaire>(`${environment.apiUrl}/questionnaires/${idQuestionnaire}`);\n    }\n\n    register(questionnaire: Questionnaire) {\n        function replacer(key: string, value: any) {\n            if (key === 'idUser' || key === 'description' || key === 'merci') {\n                return undefined;\n            }\n            return value;\n        }\n        questionnaire.administrateur = new User();\n        questionnaire.administrateur.id = questionnaire.idUser;\n        questionnaire.dateCreation = new Date(Date.now());\n        questionnaire.datePeremption = new Date(2020, 12, 15);\n        questionnaire.url = environment.apiUrl + '/answer/' + questionnaire.id;\n        const questStr = JSON.stringify(questionnaire, replacer);\n        return this.http.post(`/questionnaire/create`, JSON.parse(questStr));\n        // return this.http.post(`${environment.apiUrl}/questionnaires/register`, questionnaire);\n    }\n\n    update(id: number, questionnaire: Questionnaire) {\n        function replacer(key: string, value: any) {\n            if (key === 'idUser' || key === 'description' || key === 'merci') {\n                return undefined;\n            }\n            return value;\n        }\n        questionnaire.administrateur = new User();\n        questionnaire.administrateur.id = questionnaire.idUser;\n        questionnaire.dateCreation = new Date(Date.now());\n        questionnaire.datePeremption = new Date(2020, 12, 15);\n        questionnaire.url = environment.apiUrl + '/answer/' + id;\n        questionnaire.id = id;\n        const questStr = JSON.stringify(questionnaire, replacer);\n        return this.http.post(`/questionnaire/update/${id}`, JSON.parse(questStr));\n        // return this.http.post(`${environment.apiUrl}/questionnaires/update/${id}`, questionnaire);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`/questionnaire/delete/${id}`);\n        // return this.http.delete(`${environment.apiUrl}/questionnaires/${id}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {Reponse} from '../models/reponse';\n\n@Injectable({ providedIn: 'root' })\nexport class ReponseService {\n\n    constructor(private http: HttpClient) { }\n\n    readAllByIdQuestionAndIdUser(idQuestion: number, idUser: number) {\n         return this.http.get<Reponse[]>(`/reponse/findByIdQuestion/${idQuestion}`);\n        //return this.http.get<Reponse[]>(`${environment.apiUrl}/reponses/all/${idQuestion}&${idUser}`);\n    }\n\n    read(idReponse: number): Observable<Reponse> {\n         return this.http.get<Reponse>(`/reponse/read/${idReponse}`);\n        //return this.http.get<Reponse>(`${environment.apiUrl}/reponses/read/${idReponse}`);\n    }\n\n    create(reponse: Reponse) {\n         return this.http.post(`/reponse/create`, reponse);\n        //return this.http.post(`${environment.apiUrl}/reponses/create`, reponse);\n    }\n\n    update(id: number, reponse: Reponse) {\n         return this.http.post(`/reponse/update/${id}`, reponse);\n        //return this.http.post(`${environment.apiUrl}/reponses/update/${id}`, reponse);\n    }\n\n    delete(id: number) {\n         return this.http.delete(`/reponse/delete/${id}`);\n        //return this.http.delete(`${environment.apiUrl}/reponses/${id}`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Reponse} from '../models/reponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultatService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(id: number): Observable<any> {\n    return this.http.get<any>(`/statistique/idQuestionnaire/${id}`);\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {Proposition} from '../models/proposition';\nimport {Theme} from '../models/theme';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n\n    constructor(private http: HttpClient) { }\n\n    readAllByIdQuestionnaire(idQuestionnaire: number) {\n        return this.http.get<Theme[]>(`/themes/${idQuestionnaire}`);\n    }\n\n    create(theme: Theme) {\n        return this.http.post(`/themes/`, theme);\n    }\n\n    deleteAll(idQuestionnaire: number) {\n        return this.http.delete(`/themes/${idQuestionnaire}`);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../models/user';\nimport {environment} from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\n\n/* Le service utilisateur contient un ensemble standard de méthodes CRUD pour la gestion des utilisateurs.\n * Il sert d'interface entre l'application Angular et l'API backend.\n */\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n         return this.http.get<User[]>(`/admin/readAll`);\n        // return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    register(user: User) {\n        console.log(user);\n        return this.http.post(`/admin/create`, user);\n        // return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`/admin/delete/${id}`);\n        // return this.http.delete(`${environment.apiUrl}/users/${id}`);\n    }\n\n    update(id: number, user: User) {\n        delete user.id;\n        return this.http.post(`/admin/update/${id}`, user);\n        // return this.http.post(`${environment.apiUrl}/users/update/${id}`, user);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200'\n   // apiUrl: 'http://barometre-managerial.leria-etud.univ-angers.fr'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}